// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$arrow-l-name: 'arrow-l';
$arrow-l-x: 262px;
$arrow-l-y: 42px;
$arrow-l-offset-x: -262px;
$arrow-l-offset-y: -42px;
$arrow-l-width: 25px;
$arrow-l-height: 41px;
$arrow-l-total-width: 287px;
$arrow-l-total-height: 261px;
$arrow-l-image: 'sprite.png';
$arrow-l: (262px, 42px, -262px, -42px, 25px, 41px, 287px, 261px, 'sprite.png', 'arrow-l', );
$arrow-r-name: 'arrow-r';
$arrow-r-x: 262px;
$arrow-r-y: 0px;
$arrow-r-offset-x: -262px;
$arrow-r-offset-y: 0px;
$arrow-r-width: 25px;
$arrow-r-height: 41px;
$arrow-r-total-width: 287px;
$arrow-r-total-height: 261px;
$arrow-r-image: 'sprite.png';
$arrow-r: (262px, 0px, -262px, 0px, 25px, 41px, 287px, 261px, 'sprite.png', 'arrow-r', );
$arrow-name: 'arrow';
$arrow-x: 131px;
$arrow-y: 228px;
$arrow-offset-x: -131px;
$arrow-offset-y: -228px;
$arrow-width: 31px;
$arrow-height: 27px;
$arrow-total-width: 287px;
$arrow-total-height: 261px;
$arrow-image: 'sprite.png';
$arrow: (131px, 228px, -131px, -228px, 31px, 27px, 287px, 261px, 'sprite.png', 'arrow', );
$burger-name: 'burger';
$burger-x: 182px;
$burger-y: 131px;
$burger-offset-x: -182px;
$burger-offset-y: -131px;
$burger-width: 60px;
$burger-height: 39px;
$burger-total-width: 287px;
$burger-total-height: 261px;
$burger-image: 'sprite.png';
$burger: (182px, 131px, -182px, -131px, 60px, 39px, 287px, 261px, 'sprite.png', 'burger', );
$icon-name: 'icon';
$icon-x: 131px;
$icon-y: 131px;
$icon-offset-x: -131px;
$icon-offset-y: -131px;
$icon-width: 50px;
$icon-height: 50px;
$icon-total-width: 287px;
$icon-total-height: 261px;
$icon-image: 'sprite.png';
$icon: (131px, 131px, -131px, -131px, 50px, 50px, 287px, 261px, 'sprite.png', 'icon', );
$light-name: 'light';
$light-x: 0px;
$light-y: 0px;
$light-offset-x: 0px;
$light-offset-y: 0px;
$light-width: 130px;
$light-height: 130px;
$light-total-width: 287px;
$light-total-height: 261px;
$light-image: 'sprite.png';
$light: (0px, 0px, 0px, 0px, 130px, 130px, 287px, 261px, 'sprite.png', 'light', );
$menu-close-name: 'menu-close';
$menu-close-x: 178px;
$menu-close-y: 182px;
$menu-close-offset-x: -178px;
$menu-close-offset-y: -182px;
$menu-close-width: 43px;
$menu-close-height: 44px;
$menu-close-total-width: 287px;
$menu-close-total-height: 261px;
$menu-close-image: 'sprite.png';
$menu-close: (178px, 182px, -178px, -182px, 43px, 44px, 287px, 261px, 'sprite.png', 'menu-close', );
$s-search-name: 's-search';
$s-search-x: 222px;
$s-search-y: 182px;
$s-search-offset-x: -222px;
$s-search-offset-y: -182px;
$s-search-width: 37px;
$s-search-height: 36px;
$s-search-total-width: 287px;
$s-search-total-height: 261px;
$s-search-image: 'sprite.png';
$s-search: (222px, 182px, -222px, -182px, 37px, 36px, 287px, 261px, 'sprite.png', 's-search', );
$search-name: 'search';
$search-x: 131px;
$search-y: 182px;
$search-offset-x: -131px;
$search-offset-y: -182px;
$search-width: 46px;
$search-height: 45px;
$search-total-width: 287px;
$search-total-height: 261px;
$search-image: 'sprite.png';
$search: (131px, 182px, -131px, -182px, 46px, 45px, 287px, 261px, 'sprite.png', 'search', );
$token-name: 'token';
$token-x: 0px;
$token-y: 131px;
$token-offset-x: 0px;
$token-offset-y: -131px;
$token-width: 130px;
$token-height: 130px;
$token-total-width: 287px;
$token-total-height: 261px;
$token-image: 'sprite.png';
$token: (0px, 131px, 0px, -131px, 130px, 130px, 287px, 261px, 'sprite.png', 'token', );
$voice-name: 'voice';
$voice-x: 131px;
$voice-y: 0px;
$voice-offset-x: -131px;
$voice-offset-y: 0px;
$voice-width: 130px;
$voice-height: 130px;
$voice-total-width: 287px;
$voice-total-height: 261px;
$voice-image: 'sprite.png';
$voice: (131px, 0px, -131px, 0px, 130px, 130px, 287px, 261px, 'sprite.png', 'voice', );
$spritesheet-width: 287px;
$spritesheet-height: 261px;
$spritesheet-image: 'sprite.png';
$spritesheet-sprites: ($arrow-l, $arrow-r, $arrow, $burger, $icon, $light, $menu-close, $s-search, $search, $token, $voice, );
$spritesheet: (287px, 261px, 'sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
